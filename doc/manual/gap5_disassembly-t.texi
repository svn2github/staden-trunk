@chapter Checking Assemblies and Removing Readings
@menu
* Check Assembly::                    Checking Assemblies
* Removing Readings::                 Removing Readings and Breaking Contigs
* Break Contig::                      Breaking Contigs
* Disassemble::                       Disassembling Readings
* Delete Contigs::                    Delete Contigs
@end menu

@cindex assembly problems: breaking contigs
@cindex assembly problems: removing readings
@cindex assembly problems: disassembling readings

After assembly, and prior to editing, it can be useful to examine the
quality of the alignments between individual readings and the
sections of the consensus which they overlap. This may
reveal doubtful joins between sections of contigs, poorly aligned
readings, or readings that have been misplaced. By using this analysis
in combination with other gap5
functions 
such as Find internal joins (_fpref(FIJ, Find Internal
Joins, fij)) and Find repeats (_fpref(Repeats, Find Repeats,
repeats)), 
it is also possible to discover if 
readings have been positioned in the
wrong copies of repeat elements. 

If readings are found to be misplaced
or need removing for other reasons, gap5 has functions
for breaking contigs
(_fpref(Break Contig, Breaking Contigs, disassembly)),
and removing readings
(_fpref(Disassemble, Disassembling Readings, disassembly)).
These functions can be accessed through the main gap5 Edit menu or from
within the Contig Editor.

If readings are removed from contigs to start new contigs of one
reading, these contigs can then be processed by Find internal joins 
(_fpref(FIJ, Find Internal
Joins, fij)) 
and the Join editor
(_fpref(Editor-Joining, The Join Editor, contig_editor)), which should
reveal all the other positions at which the reading matches.

@page
_split()
@node Check Assembly
@subsection Checking Assemblies
@cindex Check assembly

The Check Assembly routine (which is invoked from the gap5 View menu) is
used to check contigs for potentially misassembled readings by comparing
them against the segment of the consensus which they overlap.  It simply
slides a small window along the sequence identifying regions of high
disagreement between that portion of sequence and the consensus. Results
are displayed in the Output Window and plotted on the main diagonal in
the Contig Comparator. _fxref(Contig Comparator, Contig Comparator,
comparator)

From the Contig Comparator the user can invoke the Contig Editor to
examine the alignment of any problem reading. _fxref(Editor, Editing in
gap5, contig_editor) If the reading appears to be correctly positioned
the user can either edit it, or instead select the name to add it to the
``readings'' list for subsequent disassembly or removal.

_picture(gap5_check_ass)

Users select either to search only one contig ("single"), all contigs
("all contigs"), or a subset of contigs contained in a "file" or a
"list". If "file" or "list" is selected the "browse" button will be
activated and clicking on it will invoke a file or list browser. If a
single contig is selected the "Contig identifier" dialogue will be
activated and users should enter a contig name.

The percentage disagreement and over what size of window are both
configurable parameters. Additionally there is a parameter to control
whether N bases in the sequence should be considered as disagreements or
not. The choice will depend on whether you are looking for sequences
that appear to be in the wrong place (ignore Ns) or simply sequences
that appear to have a large number of incorrect base calls (keep Ns).

@cindex reading percent mismatch
@cindex readings: sorted on alignment score
@cindex aligned readings: sorted on alignment score

The "Information" window produced by selecting "Information" from the
Contig Comparator "Results" menu produces a summary of the results
sorted in order os percentage mismatch.


By clicking with the right mouse button
on results plotted in the Contig Comparator a pop-up menu is revealed
which can be used to invoke the Contig Editor
(_fpref(Editor, Editing in gap4, contig_editor)). The editor will start
up with the cursor positioned on the problem reading. If the reading is
found to be misplaced it can be marked for removal from within the Editor
(_fpref(Editor-Comm-Remove Reading, Remove Reading, contig_editor)).
However, prior to this it may be beneficial to use some of the other
analyses such as Find internal joins (_fpref(FIJ, Find Internal
Joins, fij)) and Find repeats (_fpref(Repeats, Find Repeats,
repeats)), which may help to find its correct location. Both of these
functions produce results plotted in the Contig Comparator
(_fpref(Contig Comparator, Contig Comparator, comparator)) and any
alternative locations will give matches on the same vertical or
horizontal projection as the problem reading.

@page
_split()
@node Removing Readings
@section Removing Readings and Breaking Contigs

Occasionally contigs require more drastic changes than simple basecall
edits. Sometimes it is necessary
to remove readings that have been put in the wrong
place, or to break contigs that should not have been joined. Gap5
contains functions to help with these problems, and two
types of interface. 

If a contig
needs to be broken cleanly into two new contigs, with all the readings,
other than the two at the incorrect join, still linked together, then
Break Contig 
(_fpref(Break Contig, Breaking Contigs, disassembly)), or
(_fpref(Editor-Comm-Break Contig, Break Contig, contig_editor))
should be used. The former interface is available via the main gap5 Edit
menu, and the latter as an option in the Contig Editor.

If one or more readings need removing from from contig(s), even if their
removal will break the contiguity of a contig, then
(_fpref(Disassemble, Disassemble Readings, disassembly)), or
(_fpref(Editor-Comm-Remove Reading, Remove Reading, contig_editor))
should be used. The former interface is available via the main gap5 Edit
menu, and the latter as an option in the Contig Editor. Readings can be
removed from the database completely, or moved to start individual new
contigs, one for each reading.


@page
_split()
@node Break Contig
@subsection Breaking Contigs
@cindex Break contig

The Break Contig function (which is available from the gap5 Edit menu)
enables contigs to be broken by removing the link between two adjacent
readings. The user defines the contig coordinate to break at. All
sequences starting to the right of that position will be placed into a
new contig.

_picture(gap5_break_contig)

Breaking contig can somtimes cause more holes to be created. The
``Remove contig holes'' will also cause subsequent breaks to happen at
these cases, producing more than one additional contig.  If we have
aligned against a reference and expect regions of zero coverage then
this option should be disabled.

@page
_split()
@node Disassemble
@subsection Disassembling Readings
@cindex Disassemble readings
@cindex Removing readings

This function is used to remove readings from a database or move
readings to new contigs. 

_picture(gap5_disassembly)

If readings are removed from the database all reference to them is
deleted. If a reading is moved to a ``single-read contig'' a new
contig will be created containing this one single reading, which may
then be re-processed by Find Internal Joins
(_fpref(FIJ, Find Internal Joins, fij)) 
and the Join editor
(_fpref(Editor-Joining, The Join Editor, contig_editor)), which should
reveal all the other positions at which the reading matches.

More useful is the general ``Move readings to new contigs''. This will
keep any assembly relationships intact between the set of readings to
be disassembled. For example if three readings overlap then when
disassembled all three will end up in a single new contig. This
function is particularly useful for pulling apart false joins or
repeats.

The set of readings to be processed can be read from a ``file'' or a ``list'' and
clicking on the ``browse'' button will invoke an appropriate browser. If just a
single reading is to be assembled choose ``single'' and enter the
reading name instead of the file or list of filenames.

Removal via a ``list'' is a particularly powerful option when
controlled via the list generation functions within the contig
editor. For example break contig could be viewed as disassembling a
list of readings selected using ``Select this reading and all to
right''.

Unlike gap4, gap5 can cope with having holes in contigs. (This is
obviously a requirement when dealing with mapped alignments.)  Hence
gap5 gives us a choice whether to break contigs into two (or more)
pieces when removing sequences produces holes in the contigs. By
default this is enabled.

@page
_split()
@node Delete Contigs
@subsection Delete Contigs
@cindex Delete Contigs
@cindex Removing contigs

While Disassemble Readings is capable of removing entire contigs, it is
inefficient for this task as it has a lot of additional house-keeping to
perform.

_picture(gap5_delete_contigs)

Delete Contigs should be used when we wish to remove entire contigs.
Be careful not to accidentally choose this over disassemble readings as
even when giving a single sequence name, this function will interpret it
as a request for removing all other sequences in that contig too.

There is no Undo feature, so backups are advised before hand.


