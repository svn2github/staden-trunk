.TH "copy_db" 1 "" "" "Staden Package"
.SH "NAME"
.PP
copy_db \- a garbage collecting gap4 database copier and merger

.SH "SYNOPSIS"
.PP

\fBcopy_db\fP [\fB-v\fP] [\fB-f\fP] [@code {-b} \fI32/64\fP] [@code
{-T}] \fIfrom.vers\fP ... \fIto.vers\fP

.SH "DESCRIPTION"
.PP

\fBCopy_db\fP copies one or more gap4 databases to a new name by
physically extracting the information from the first databases and
writing it to the last database listed on the command line. This
operation can be considered analogous to copying files into a directory.
This is slower than a direct \fBcp\fP command, but has the advantage
of merging several databases together and the resulting database will
have been  garbage collected. That is, any fragmentation in the original
databases is removed (as much as is possible).

NOTE: Care should be taken when merging database. \fBNo checks\fP are
performed to make sure that the databases do not already contain the
same readings. Thus attempting to copy the same database several times will
cause problems later on. No merging of vector, clone or template
information is performed either.

.SH "OPTIONS"
.PP

.TP
\fB-v\fP
Enable verbose output. This gives a running summary of the current piece
of information being copied.

.TP
\fB-f\fP
Attempts to spot and fix various database corruptions. A
corrupted gap4 database may not be corruption free after this,
but there's more chance of being able to recover data.

.TP
-T
Removes annotation tags while copying. (Of limited use.)

.TP
-b \fIbitsize\fP
Generates the new database using a given bitsize, where
\fIbitsize\fP is either \fB32\fP or \fB64\fP.
.TE
.SH "EXAMPLES"
.PP

To merge database X with database Y to give a new database Z use:

.nf
.in +0.5i
copy_db X.0 Y.0 Z.0
.in -0.5i
.fi

.SH "NOTES"
.PP

To copy a database quickly without garbage collecting the UNIX \fBcp\fP
command can be used as follows. This copies version F of database DB to
version T of database XYZZY.

.nf
.in +0.5i
cp DB.F XYZZY.T; cp DB.F.aux XYZZY.T.aux
.in -0.5i
.fi

Care must be taken to check for the busy file (DB.F.BUSY) before making
the copy. If the database is written to during the operation of the copy
command then the new database may be corrupted.
