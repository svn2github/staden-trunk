package require Iwidgets
namespace eval ::EMBOSS::cpgreport {
namespace import ::EMBOSS::*
variable vars
variable arguments


option add *e_cpgreport*Xentry.entry.width 30
option add *e_cpgreport*Entryfield.width 30
option add *e_cpgreport*Combobox.width 27

proc create_dialogue {} {
    variable vars
    variable arguments
    set vars(application) cpgreport
    set w [xtoplevel .e_cpgreport -resizable 0]
    if {$w == {}} return
    bind $w <Destroy> \
"if {{$w} == {%W}} {::EMBOSS::destroy_dialogue [namespace current]}"
    fix_maxsize $w
    wm title $w {EMBOSS - cpgreport}
    label $w._title -text {Reports all CpG rich regions}
    pack $w._title -side top -fill both
    ::EMBOSS::init_dialogue [namespace current]
    set vars(cpgreport._type) application

    iwidgets::tabnotebook $w.book_1 -tabpos n -padx 10 -equaltabs 0
    pack $w.book_1 -side top -fill both
    set book(book_1) $w
    set page [$w.book_1 add \
	-label [subst {Input section}]]
    $w.book_1 view [subst {Input section}]
    lappend wlist $w
    set w $page

    lappend arguments sequence
    set vars(sequence)       [get_active_seq_id 0]
    if {$vars(sequence) == -1} {set vars(sequence) [get_active_seq_id 0]}
    set vars(sequence.name)  [seq_info $vars(sequence) name]
    sequence_changed [namespace current] sequence
    set vars(sequence.type) [subst DNA]
    seq_id $w.sequence \
	-textvariable [namespace current]::vars(sequence.name)\
	-start_value $vars(sequence.begin)\
	-end_value $vars(sequence.end)\
	-to [seq_info $vars(sequence) length]\
	-browse_cmd seq_browser\
	-update_cmd "{::EMBOSS::seq_updates [namespace current] sequence $w.sequence}"
    set vars(sequence) [subst {}]
    pack $w.sequence -side top -fill both
    set vars(sequence.path) $w.sequence
    set vars(sequence.required)  1
    trace variable vars(sequence.name) w  "::EMBOSS::sequence_changed [namespace current] sequence"
    set vars(sequence._type) seqall

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Required section}]]
    lappend wlist $w
    set w $page

    lappend arguments score
    iwidgets::entryfield $w.score \
	-validate integer \
	-textvariable [namespace current]::vars(score) \
	-labeltext [subst {CpG score}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.score component entry] -sticky nse
    set vars(score) [subst 17]
    pack $w.score -side top -fill both
    set vars(score.minimum) [subst 1]
    set vars(score.maximum) [subst 200]
    set vars(score.path) $w.score
    set vars(score.required)  0
    set vars(score._type) integer

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Output section}]]
    lappend wlist $w
    set w $page

    lappend arguments outfile
    xentry $w.outfile \
	-label [subst {Output filename}]\
	-textvariable [namespace current]::vars(outfile) \
	-checkcommand ::EMBOSS::check_outfile\
	-state [lindex {disabled normal} [subst 1]]
    $w.outfile delete 0 end
    $w.outfile insert end [subst cpgreport0.out]
    pack $w.outfile -side top -fill both
    set vars(outfile.path) $w.outfile
    set vars(outfile.required)  1
    set vars(outfile._type) outfile

    lappend arguments outfeat
    xentry $w.outfeat \
	-label [subst {Feature output filename}]\
	-textvariable [namespace current]::vars(outfeat) \
	-checkcommand ::EMBOSS::check_outfile\
	-state [lindex {disabled normal} [subst 1]]
    $w.outfeat delete 0 end
    $w.outfeat insert end [subst feature1.out]
    pack $w.outfeat -side top -fill both
    set vars(outfeat.path) $w.outfeat
    set vars(outfeat.required)  1
    set vars(outfeat._type) featout

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]
    okcancelhelp $w._okcancelhelp -bd 2 -relief groove\
	-ok_command "::EMBOSS::run_dialogue [namespace current] $w" \
	-cancel_command "destroy $w" \
	-help_command {show_url [::EMBOSS::data_dir]/../doc/programs/html/cpgreport.html}
    pack $w._okcancelhelp -side bottom -fill x

    ::EMBOSS::resizebook $book(book_1).book_1
}


}; # namespace eval

