package require Iwidgets
namespace eval ::EMBOSS::mwfilter {
namespace import ::EMBOSS::*
variable vars
variable arguments


option add *e_mwfilter*Xentry.entry.width 30
option add *e_mwfilter*Entryfield.width 30
option add *e_mwfilter*Combobox.width 27

proc create_dialogue {} {
    variable vars
    variable arguments
    set vars(application) mwfilter
    set w [xtoplevel .e_mwfilter -resizable 0]
    if {$w == {}} return
    bind $w <Destroy> \
"if {{$w} == {%W}} {::EMBOSS::destroy_dialogue [namespace current]}"
    fix_maxsize $w
    wm title $w {EMBOSS - mwfilter}
    label $w._title -text {Filter noisy molwts from mass spec output}
    pack $w._title -side top -fill both
    ::EMBOSS::init_dialogue [namespace current]
    set vars(mwfilter._type) application

    iwidgets::tabnotebook $w.book_1 -tabpos n -padx 10 -equaltabs 0
    pack $w.book_1 -side top -fill both
    set book(book_1) $w
    set page [$w.book_1 add \
	-label [subst {Input section}]]
    $w.book_1 view [subst {Input section}]
    lappend wlist $w
    set w $page

    lappend arguments infile
    xentry $w.infile \
	-label [subst {Molecular weight file input}]\
	-textvariable [namespace current]::vars(infile) \
	-checkcommand ::EMBOSS::check_infile\
	-state [lindex {disabled normal} [subst 1]]
    $w.infile delete 0 end
    $w.infile insert end [subst {}]
    pack $w.infile -side top -fill both
    set vars(infile.path) $w.infile
    set vars(infile.required)  1
    set vars(infile._type) infile

    lappend arguments datafile
    xentry $w.datafile \
	-label [subst {Data file of noisy molecular weights}]\
	-textvariable [namespace current]::vars(datafile) \
	-checkcommand ::EMBOSS::check_infile\
	-state [lindex {disabled normal} [subst 1]]
    $w.datafile delete 0 end
    $w.datafile insert end [subst Emwfilter.dat]
    pack $w.datafile -side top -fill both
    set vars(datafile.path) $w.datafile
    set vars(datafile.required)  0
    set vars(datafile._type) datafile

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Required section}]]
    lappend wlist $w
    set w $page

    lappend arguments tolerance
    iwidgets::entryfield $w.tolerance \
	-validate real \
	-textvariable [namespace current]::vars(tolerance) \
	-labeltext [subst {Ppm tolerance}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.tolerance component entry] -sticky nse
    set vars(tolerance) [subst 50.0]
    pack $w.tolerance -side top -fill both
    set vars(tolerance.path) $w.tolerance
    set vars(tolerance.required)  0
    set vars(tolerance._type) float

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Additional section}]]
    lappend wlist $w
    set w $page

    lappend arguments showdel
    checkbutton $w.showdel \
	-text [subst {Output deleted mwts}]\
	-variable [namespace current]::vars(showdel)\
	-state [lindex {disabled normal} [subst 1]]
    pack $w.showdel -side top -anchor w
    set vars(showdel) [subst N]
    set vars(showdel.path) $w.showdel
    set vars(showdel.required)  0
    set vars(showdel._type) boolean

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Output section}]]
    lappend wlist $w
    set w $page

    lappend arguments outfile
    xentry $w.outfile \
	-label [subst {Output filename}]\
	-textvariable [namespace current]::vars(outfile) \
	-checkcommand ::EMBOSS::check_outfile\
	-state [lindex {disabled normal} [subst 1]]
    $w.outfile delete 0 end
    $w.outfile insert end [subst mwfilter0.out]
    pack $w.outfile -side top -fill both
    set vars(outfile.path) $w.outfile
    set vars(outfile.required)  1
    set vars(outfile._type) outfile

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]
    okcancelhelp $w._okcancelhelp -bd 2 -relief groove\
	-ok_command "::EMBOSS::run_dialogue [namespace current] $w" \
	-cancel_command "destroy $w" \
	-help_command {show_url [::EMBOSS::data_dir]/../doc/programs/html/mwfilter.html}
    pack $w._okcancelhelp -side bottom -fill x

    ::EMBOSS::resizebook $book(book_1).book_1
}


}; # namespace eval

