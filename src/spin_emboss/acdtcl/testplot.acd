package require Iwidgets
namespace eval ::EMBOSS::testplot {
namespace import ::EMBOSS::*
variable vars
variable arguments


option add *e_testplot*Xentry.entry.width 30
option add *e_testplot*Entryfield.width 30
option add *e_testplot*Combobox.width 27

proc create_dialogue {} {
    variable vars
    variable arguments
    set vars(application) testplot
    set w [xtoplevel .e_testplot -resizable 0]
    if {$w == {}} return
    bind $w <Destroy> \
"if {{$w} == {%W}} {::EMBOSS::destroy_dialogue [namespace current]}"
    fix_maxsize $w
    wm title $w {EMBOSS - testplot}
    label $w._title -text test
    pack $w._title -side top -fill both
    set vars(testplot._type) application

    lappend arguments points
    iwidgets::entryfield $w.points \
	-validate integer \
	-textvariable [namespace current]::vars(points) \
	-labeltext [subst {Number of degrees to plot}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.points component entry] -sticky nse
    set vars(points) [subst 90]
    pack $w.points -side top -fill both
    set vars(points.minimum) [subst 2]
    set vars(points.maximum) [subst 360]
    set vars(points.path) $w.points
    set vars(points.required)  0
    set vars(points._type) integer

    lappend arguments overlap
    checkbutton $w.overlap \
	-text [subst {Overlap the graphs}]\
	-variable [namespace current]::vars(overlap)\
	-state [lindex {disabled normal} [subst 1]]
    pack $w.overlap -side top -anchor w
    set vars(overlap) [subst 1]
    set vars(overlap.path) $w.overlap
    set vars(overlap.required)  0
    set vars(overlap._type) bool

    lappend arguments graph
    iwidgets::combobox $w.graph\
	-textvariable [namespace current]::vars(graph)\
	-labeltext [subst {Graphics output format}]
    eval $w.graph insert list end [list_graph_types]
    grid [$w.graph component entry] -sticky nse
    $w.graph delete entry 0 end
    $w.graph insert entry end [subst data]
    $w.graph configure \
	-state [lindex {disabled normal} [subst 1]]
    pack $w.graph -side top -fill both
    set vars(graph.path) $w.graph
    set vars(graph.required)  0
    set vars(graph._type) xygraph
    okcancelhelp $w._okcancelhelp -bd 2 -relief groove\
	-ok_command "::EMBOSS::run_dialogue [namespace current] $w" \
	-cancel_command "destroy $w" \
	-help_command {show_url [::EMBOSS::data_dir]/../doc/programs/html/testplot.html}
    pack $w._okcancelhelp -side bottom -fill x
}


}; # namespace eval

