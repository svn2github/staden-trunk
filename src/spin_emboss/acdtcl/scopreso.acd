package require Iwidgets
namespace eval ::EMBOSS::scopreso {
namespace import ::EMBOSS::*
variable vars
variable arguments


option add *e_scopreso*Xentry.entry.width 30
option add *e_scopreso*Entryfield.width 30
option add *e_scopreso*Combobox.width 27

proc create_dialogue {} {
    variable vars
    variable arguments
    set vars(application) scopreso
    set w [xtoplevel .e_scopreso -resizable 0]
    if {$w == {}} return
    bind $w <Destroy> \
"if {{$w} == {%W}} {::EMBOSS::destroy_dialogue [namespace current]}"
    fix_maxsize $w
    wm title $w {EMBOSS - scopreso}
    label $w._title -text {Removes low resolution domains from a scop classification file.}
    pack $w._title -side top -fill both
    set vars(scopreso._type) application

    iwidgets::tabnotebook $w.book_1 -tabpos n -padx 10 -equaltabs 0
    pack $w.book_1 -side top -fill both
    set book(book_1) $w
    set page [$w.book_1 add \
	-label [subst {input Section}]]
    $w.book_1 view [subst {input Section}]
    lappend wlist $w
    set w $page

    lappend arguments cpdbpath
    iwidgets::entryfield $w.cpdbpath \
	-textvariable [namespace current]::vars(cpdbpath) \
	-labeltext [subst {Location of domain coordinate files for input (embl-like format)}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.cpdbpath component entry] -sticky nse
    set vars(cpdbpath) [subst ./]
    pack $w.cpdbpath -side top -fill both
    set vars(cpdbpath.path) $w.cpdbpath
    set vars(cpdbpath.required)  1
    set vars(cpdbpath._type) string

    lappend arguments cpdbextn
    iwidgets::entryfield $w.cpdbextn \
	-textvariable [namespace current]::vars(cpdbextn) \
	-labeltext [subst {Extension of coordinate files (embl-like format)}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.cpdbextn component entry] -sticky nse
    set vars(cpdbextn) [subst .pxyz]
    pack $w.cpdbextn -side top -fill both
    set vars(cpdbextn.path) $w.cpdbextn
    set vars(cpdbextn.required)  1
    set vars(cpdbextn._type) string

    lappend arguments scopinf
    xentry $w.scopinf \
	-label [subst {Name of SCOP data file for input (embl-like format)}]\
	-textvariable [namespace current]::vars(scopinf) \
	-checkcommand ::EMBOSS::check_infile\
	-state [lindex {disabled normal} [subst 1]]
    $w.scopinf delete 0 end
    $w.scopinf insert end [subst Escop.dat]
    pack $w.scopinf -side top -fill both
    set vars(scopinf.path) $w.scopinf
    set vars(scopinf.required)  1
    set vars(scopinf._type) infile

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {required Section}]]
    lappend wlist $w
    set w $page

    lappend arguments threshold
    iwidgets::entryfield $w.threshold \
	-validate real \
	-textvariable [namespace current]::vars(threshold) \
	-labeltext [subst {Threshold for inclusion (Angstroms)}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.threshold component entry] -sticky nse
    set vars(threshold) [subst 2.8]
    pack $w.threshold -side top -fill both
    set vars(threshold.path) $w.threshold
    set vars(threshold.required)  1
    set vars(threshold._type) float

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {output Section}]]
    lappend wlist $w
    set w $page

    lappend arguments scopoutf
    xentry $w.scopoutf \
	-label [subst {Name of SCOP data file for output}]\
	-textvariable [namespace current]::vars(scopoutf) \
	-checkcommand ::EMBOSS::check_outfile\
	-state [lindex {disabled normal} [subst 1]]
    $w.scopoutf delete 0 end
    $w.scopoutf insert end [subst Escop_2.8.dat]
    pack $w.scopoutf -side top -fill both
    set vars(scopoutf.path) $w.scopoutf
    set vars(scopoutf.required)  1
    set vars(scopoutf._type) outfile

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]
    okcancelhelp $w._okcancelhelp -bd 2 -relief groove\
	-ok_command "::EMBOSS::run_dialogue [namespace current] $w" \
	-cancel_command "destroy $w" \
	-help_command {show_url [::EMBOSS::data_dir]/../doc/programs/html/scopreso.html}
    pack $w._okcancelhelp -side bottom -fill x

    ::EMBOSS::resizebook $book(book_1).book_1
}


}; # namespace eval

