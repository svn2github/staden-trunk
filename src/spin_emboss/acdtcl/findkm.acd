package require Iwidgets
namespace eval ::EMBOSS::findkm {
namespace import ::EMBOSS::*
variable vars
variable arguments


option add *e_findkm*Xentry.entry.width 30
option add *e_findkm*Entryfield.width 30
option add *e_findkm*Combobox.width 27

proc create_dialogue {} {
    variable vars
    variable arguments
    set vars(application) findkm
    set w [xtoplevel .e_findkm -resizable 0]
    if {$w == {}} return
    bind $w <Destroy> \
"if {{$w} == {%W}} {::EMBOSS::destroy_dialogue [namespace current]}"
    fix_maxsize $w
    wm title $w {EMBOSS - findkm}
    label $w._title -text {Find Km and Vmax for an enzyme reaction by a Hanes/Woolf plot}
    pack $w._title -side top -fill both
    ::EMBOSS::init_dialogue [namespace current]
    set vars(findkm._type) application

    iwidgets::tabnotebook $w.book_1 -tabpos n -padx 10 -equaltabs 0
    pack $w.book_1 -side top -fill both
    set book(book_1) $w
    set page [$w.book_1 add \
	-label [subst {Input section}]]
    $w.book_1 view [subst {Input section}]
    lappend wlist $w
    set w $page

    lappend arguments infile
    xentry $w.infile \
	-label [subst {Enter name of file containing data}]\
	-textvariable [namespace current]::vars(infile) \
	-checkcommand ::EMBOSS::check_infile\
	-state [lindex {disabled normal} [subst 1]]
    $w.infile delete 0 end
    $w.infile insert end [subst {}]
    pack $w.infile -side top -fill both
    set vars(infile.path) $w.infile
    set vars(infile.required)  1
    set vars(infile._type) infile

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Advanced section}]]
    lappend wlist $w
    set w $page

    lappend arguments plot
    checkbutton $w.plot \
	-text [subst {S/V vs S}]\
	-variable [namespace current]::vars(plot)\
	-state [lindex {disabled normal} [subst 1]]
    pack $w.plot -side top -anchor w
    set vars(plot) [subst Y]
    set vars(plot.path) $w.plot
    set vars(plot.required)  0
    set vars(plot._type) boolean

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Output section}]]
    lappend wlist $w
    set w $page

    lappend arguments outfile
    xentry $w.outfile \
	-label [subst {Output filename}]\
	-textvariable [namespace current]::vars(outfile) \
	-checkcommand ::EMBOSS::check_outfile\
	-state [lindex {disabled normal} [subst 1]]
    $w.outfile delete 0 end
    $w.outfile insert end [subst findkm0.out]
    pack $w.outfile -side top -fill both
    set vars(outfile.path) $w.outfile
    set vars(outfile.required)  1
    set vars(outfile._type) outfile

    lappend arguments graphlb
    iwidgets::combobox $w.graphlb\
	-textvariable [namespace current]::vars(graphlb)\
	-labeltext [subst {Graphics output format}]
    eval $w.graphlb insert list end [list_graph_types]
    grid [$w.graphlb component entry] -sticky nse
    $w.graphlb delete entry 0 end
    $w.graphlb insert entry end [subst data]
    $w.graphlb configure \
	-state [lindex {disabled normal} [subst 1]]
    pack $w.graphlb -side top -fill both
    set vars(graphlb.path) $w.graphlb
    set vars(graphlb.required)  0
    set vars(graphlb._type) xygraph

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]
    okcancelhelp $w._okcancelhelp -bd 2 -relief groove\
	-ok_command "::EMBOSS::run_dialogue [namespace current] $w" \
	-cancel_command "destroy $w" \
	-help_command {show_url [::EMBOSS::data_dir]/../doc/programs/html/findkm.html}
    pack $w._okcancelhelp -side bottom -fill x

    ::EMBOSS::resizebook $book(book_1).book_1
}


}; # namespace eval

