package require Iwidgets
namespace eval ::EMBOSS::trimest {
namespace import ::EMBOSS::*
variable vars
variable arguments


option add *e_trimest*Xentry.entry.width 30
option add *e_trimest*Entryfield.width 30
option add *e_trimest*Combobox.width 27

proc create_dialogue {} {
    variable vars
    variable arguments
    set vars(application) trimest
    set w [xtoplevel .e_trimest -resizable 0]
    if {$w == {}} return
    bind $w <Destroy> \
"if {{$w} == {%W}} {::EMBOSS::destroy_dialogue [namespace current]}"
    fix_maxsize $w
    wm title $w {EMBOSS - trimest}
    label $w._title -text {Trim poly-A tails off EST sequences}
    pack $w._title -side top -fill both
    ::EMBOSS::init_dialogue [namespace current]
    set vars(trimest._type) application

    iwidgets::tabnotebook $w.book_1 -tabpos n -padx 10 -equaltabs 0
    pack $w.book_1 -side top -fill both
    set book(book_1) $w
    set page [$w.book_1 add \
	-label [subst {Input section}]]
    $w.book_1 view [subst {Input section}]
    lappend wlist $w
    set w $page

    lappend arguments sequence
    set vars(sequence)       [get_active_seq_id 0]
    if {$vars(sequence) == -1} {set vars(sequence) [get_active_seq_id 0]}
    set vars(sequence.name)  [seq_info $vars(sequence) name]
    sequence_changed [namespace current] sequence
    set vars(sequence.type) [subst dna]
    seq_id $w.sequence \
	-textvariable [namespace current]::vars(sequence.name)\
	-start_value $vars(sequence.begin)\
	-end_value $vars(sequence.end)\
	-to [seq_info $vars(sequence) length]\
	-browse_cmd seq_browser\
	-update_cmd "{::EMBOSS::seq_updates [namespace current] sequence $w.sequence}"
    set vars(sequence) [subst {}]
    pack $w.sequence -side top -fill both
    set vars(sequence.path) $w.sequence
    set vars(sequence.required)  1
    trace variable vars(sequence.name) w  "::EMBOSS::sequence_changed [namespace current] sequence"
    set vars(sequence._type) seqall

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Additional section}]]
    lappend wlist $w
    set w $page

    lappend arguments minlength
    iwidgets::entryfield $w.minlength \
	-validate integer \
	-textvariable [namespace current]::vars(minlength) \
	-labeltext [subst {Minimum length of a poly-A tail}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.minlength component entry] -sticky nse
    set vars(minlength) [subst 4]
    pack $w.minlength -side top -fill both
    set vars(minlength.minimum) [subst 1]
    set vars(minlength.path) $w.minlength
    set vars(minlength.required)  0
    set vars(minlength._type) integer

    lappend arguments mismatches
    iwidgets::entryfield $w.mismatches \
	-validate integer \
	-textvariable [namespace current]::vars(mismatches) \
	-labeltext [subst {Number of contiguous mismatches allowed in a tail}]\
	-state [lindex {disabled normal} [subst 1]]
    grid [$w.mismatches component entry] -sticky nse
    set vars(mismatches) [subst 1]
    pack $w.mismatches -side top -fill both
    set vars(mismatches.minimum) [subst 0]
    set vars(mismatches.path) $w.mismatches
    set vars(mismatches.required)  0
    set vars(mismatches._type) integer

    lappend arguments reverse
    checkbutton $w.reverse \
	-text [subst {Write the reverse complement when poly-T is removed}]\
	-variable [namespace current]::vars(reverse)\
	-state [lindex {disabled normal} [subst 1]]
    pack $w.reverse -side top -anchor w
    set vars(reverse) [subst Y]
    set vars(reverse.path) $w.reverse
    set vars(reverse.required)  0
    set vars(reverse._type) boolean

    lappend arguments tolower
    checkbutton $w.tolower \
	-text [subst {Change poly-A tail to lower-case}]\
	-variable [namespace current]::vars(tolower)\
	-state [lindex {disabled normal} [subst 1]]
    pack $w.tolower -side top -anchor w
    set vars(tolower) [subst N]
    set vars(tolower.path) $w.tolower
    set vars(tolower.required)  0
    set vars(tolower._type) toggle

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Advanced section}]]
    lappend wlist $w
    set w $page

    lappend arguments fiveprime
    checkbutton $w.fiveprime \
	-text [subst {Remove poly-T tails at the 5' end of the sequence.}]\
	-variable [namespace current]::vars(fiveprime)\
	-state [lindex {disabled normal} [subst 1]]
    pack $w.fiveprime -side top -anchor w
    set vars(fiveprime) [subst Y]
    set vars(fiveprime.path) $w.fiveprime
    set vars(fiveprime.required)  0
    set vars(fiveprime._type) boolean

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]

    set page [$w.book_1 add \
	-label [subst {Output section}]]
    lappend wlist $w
    set w $page

    lappend arguments outseq
    iwidgets::labeledframe $w.outseq \
	-labeltext [subst Filename]
    pack $w.outseq -side top -fill both
    lappend wlist $w
    set w [$w.outseq childsite]
    iwidgets::combobox $w.format\
	-textvariable [namespace current]::vars(outseq.format)\
	-labeltext {File format}
    eval $w.format insert list end [list_file_formats]
    grid [$w.format component entry] -sticky nse
    $w.format delete entry 0 end
    $w.format insert entry end fasta
    $w.format configure \
	-state [lindex {disabled normal} [subst 1]]
    set vars(outseq.format.path) $w.format
    pack $w.format -side top -fill both
    xentry $w.name \
	-label {Filename}\
	-textvariable [namespace current]::vars(outseq) \
	-checkcommand ::EMBOSS::check_outfile\
	-state [lindex {disabled normal} [subst 1]]
    set vars(outseq.name.path) $w.name
    pack $w.name -side top -fill both
    $w.name delete 0 end
    $w.name insert end [subst sequence0.out]
    set vars(outseq.path) $w.outseq
    set vars(outseq.required)  1
    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]
    set vars(outseq._type) seqoutall

    set w [lindex $wlist end]
    set wlist [lreplace $wlist end end]
    okcancelhelp $w._okcancelhelp -bd 2 -relief groove\
	-ok_command "::EMBOSS::run_dialogue [namespace current] $w" \
	-cancel_command "destroy $w" \
	-help_command {show_url [::EMBOSS::data_dir]/../doc/programs/html/trimest.html}
    pack $w._okcancelhelp -side bottom -fill x

    ::EMBOSS::resizebook $book(book_1).book_1
}


}; # namespace eval

