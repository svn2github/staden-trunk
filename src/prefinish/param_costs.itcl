#
# A Tree item compatible with being added to a hierarchybook.
# This both inherits the Params class as is expected to be a child of it in
# the tree structure.
# It contains the configuration parameters for experiment costs and their
# expected lengths.
#

class ParamCosts {
    inherit Params

    public {
	variable reseq_cost   1.2
	variable long_cost    2.0
	variable vpwalk_cost  3.0
	variable cpwalk_cost  8.0
	variable reverse_cost 1.0
	variable reseq_length 400
	variable pwalk_length 400
	variable long_length  700
	variable reseq_nsolutions 4
	variable long_nsolutions  4
	variable pwalk_nsolutions 4

	# Used by hierarchy book
	method display {w}
	method create_menus {m}
    }

    constructor {args} {
	eval configure $args -name "{Experiment lengths / costs}"

	set config { 
	    reseq_cost		"Resequence cost"
	    vpwalk_cost		"Template primer-walk cost"
	    cpwalk_cost		"Chromosomal primer-walk cost"
	    long_cost		"Long-read cost"
	    reverse_cost	"Fwd/Rev sequence cost"
	    reseq_length	"Resequence experiment length"
	    pwalk_length	"Primer-walk experiment length"
	    long_length		"Long-read experiment length"
	    reseq_nsolutions	"Number of sequences to resequence"
	    long_nsolutions	"Number of sequences to resequence"
	    pwalk_nsolutions	"Number of primers to pick"
	}

	foreach {var text} $config {
	    set data($var) [set $var]
	    trace variable $var w [code $this varedit $var]
	}
    }
}

# -----------------------------------------------------------------------------
# PUBLIC
#
# Called by the Hierarchybook when this node is added to the tree in order
# to create the Tk dialogue.
# -----------------------------------------------------------------------------
body ParamCosts::display {w} {
    set wins {}
    set path $w
    foreach {var text} $config {
	iwidgets::entryfield $w.$var \
	    -labeltext "$text" \
	    -textvariable [scope $var] \
	    -width 10
	pack $w.$var -side top -fill both
	lappend wins $w.$var

	# Force the links to be shown correctly.
	set $var [set $var]

	if {[info exists ::prefinish::tooltips(-$var)]} {
		::tooltip::attach $w.$var $::prefinish::tooltips(-$var)
	}
    }
    eval ::iwidgets::Labeledwidget::alignlabels $wins
}

# -----------------------------------------------------------------------------
# PUBLIC
#
# Called by the Hierarchybook to create the menus.
# NOTE: This accesses the global array ::rules
# -----------------------------------------------------------------------------
body ParamCosts::create_menus {m} {
    # Empty function used to replace inherited copy from Params
}
