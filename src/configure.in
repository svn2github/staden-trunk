dnl Process this file with aclocal and autoconf to produce a configure script.
AC_INIT([staden],[2.0])

# Check that we're running in a subdirectory. If not create one and rerun.
# This ensures that the root directory does not get polluted with the
# binary output files and also protects the root Makefile (not derived from
# Makefile.in).


AC_CONFIG_HEADERS(staden_config.h)

#-----------------------------------------------------------------------------
# Checks for compiler programs.
AC_PROG_CC
AC_PROG_CXX

#---
#Disabled for now, see fortran comments global.mk too.
# AC_PROG_F77
# # If we're using gfortran we also need to add -lgfortran to our link line
# # for programs that link against a shared-library built using (entirely or
# # in part) gfortran.
# case "$F77" in
# gfortran*)
#         LIBS="$LIBS -lgfortran"
#         ;;
# esac

#-----------------------------------------------------------------------------
# Check for library dependencies
LIBCURL_CHECK_CONFIG(,,[have_curl=yes], [have_curl=no])
AX_LIB_ZLIB(,[have_zlib=yes], [AC_MSG_ERROR([Abort: no zlib. Please rerun configure using the --with-zlib=DIR option.])])
AX_LIB_PNG(,[have_png=yes],[
    have_png=no;
    AC_MSG_WARN([No PNG library found. Gap4's Report Mutatations functionality will be absent.])])
AX_LIB_SAMTOOLS(0.1.3,[have_bam=yes],[AC_MSG_WARN([Gap5/tg_index will have reduced functionality])])

AX_LIB_IO_LIB(1.12.0,[have_io_lib=yes], [AC_MSG_ERROR([Abort: no compatible io_lib release found.
Please rerun configure using the --with-io_lib=DIR option.])])

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h)
AC_CHECK_HEADER(zlib.h)

dnl Large file support
AC_SYS_LARGEFILE
AC_FUNC_FSEEKO

dnl Checks for library functions.
AC_SEARCH_LIBS(cos, m)

dnl X11
AC_PATH_XTRA

AC_C_BIGENDIAN

dnl Do we have the va_copy function?
AX_FUNC_VA_COPY

PWD=`pwd`
AC_SUBST([PWD])

#-----------------------------------------------------------------------------
# Tcl TEA usage
TEA_INIT([3.7])

# Load the tclConfig.sh and tkConfig.sh
TEA_PATH_TCLCONFIG
TEA_LOAD_TCLCONFIG

TEA_PATH_TKCONFIG
TEA_LOAD_TKCONFIG

# Handles --prefix option
#TEA_PREFIX

# We're naughty - for now need some internals of Tk, in particular canvas
# bits and bobs
TEA_PRIVATE_TCL_HEADERS
TEA_PUBLIC_TK_HEADERS
TEA_PRIVATE_TK_HEADERS

# Guess C++ shared library generation from the C one.
[TCL_SHLIB_LDXX=`echo "$TCL_SHLIB_LD" | \
	sed 's/{CC}/{CXX}/;s/{CFLAGS}/{CXXFLAGS}/;s/^[a-z]*cc /${CXX} /'`
]

AC_SUBST([TCL_SHLIB_CFLAGS])
AC_SUBST([TCL_SHLIB_LD])
AC_SUBST([TCL_SHLIB_LDXX])
AC_SUBST([TCL_SHLIB_LD_LIBS])
AC_SUBST([TCL_SHLIB_SUFFIX])
AC_SUBST([TCL_DL_LIBS])
AC_SUBST([TCL_VERSION])
AC_SUBST([TCL_INCLUDE_SPEC])
AC_SUBST([TCL_LIB_SPEC])
AC_SUBST([TCL_LIBS])
AC_SUBST([TK_VERSION])
AC_SUBST([TK_INCLUDE_SPEC])
AC_SUBST([TK_LIB_SPEC])
AC_SUBST([TK_LIBS])

# tklib - extra widgets for Tk
AX_LIB_TKLIB(,[have_tklib=yes], [AC_MSG_ERROR([Abort: no tklib package found, use --with-tklib=DIR])])
AX_LIB_IWIDGETS(4,[have_iwidgets=yes], [AC_MSG_ERROR([Abort: no iwidgets package found, use --with-iwidgets=DIR])])
AX_LIB_ITCL(3.2,[have_itcl=yes], [AC_MSG_ERROR([Abort: no itcl package found, use --with-itcl=DIR])])
AX_LIB_ITK(3.2,[have_itk=yes], [AC_MSG_ERROR([Abort: no itk package found, use --with-itk=DIR])])

#-----------------------------------------------------------------------------
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([system.mk])
AC_CONFIG_FILES([shlib.conf])
AC_OUTPUT

#-----------------------------------------------------------------------------
# Summary output
echo
echo ----------------------------------------------------------------------
echo External packages used:

if test "$have_curl" = "yes"
then
echo    "curl:      via $_libcurl_config"
else
echo    "curl:      NOT FOUND"
fi

if test "x$ZLIB_ROOT" = "x"
then
echo    "zlib:      DIR (system)"
else
echo    "zlib:      DIR $ZLIB_ROOT"
fi

if test "$have_bam" = "yes"
then
echo    "samtools:  DIR $SAMTOOLS_ROOT"
else
echo    'samtools:  ***NOT FOUND***'
fi

echo    "io_lib:    via $_io_lib_config"

echo    "Tcl:       via $TCL_BIN_DIR/tclConfig.sh"

echo    "Tk:        via $TK_BIN_DIR/tkConfig.sh"

echo    "tklib:     $TKLIB_PATH"

echo    "Iwidgets:  $IWIDGETS_PATH"

echo    "Itcl:      $ITCL_PATH"

echo    "Itk:       $ITK_PATH"
echo ----------------------------------------------------------------------
