		      Unix build - 14th July 2009
		      ===========================


External dependencies
=====================

In order to compile the Staden source tree we also need a few extra
libraries. Some of these may be considered as internal (eg io_lib),
but they are not included within this source tree and need to be
downloaded and installed before hand.

Packages required (newer versions should work; older versions may work
but are untested - please tell me if they work too).

* staden-io_lib	1.11.x
* samtools	0.1.4
* tcl		8.4
* tk		8.4
* zlib		1.2.x
* libpng	1.2.x
* curl		7.x

Note that if your operating system separates out run-time from
development files, we'll need both. For example on Debian we need
tcl8.5 and tcl8.5-dev packages.

Other system prerequisites:

* C compiler (eg gcc, icc)
* C++ compiler (eg g++)
* FORTRAN compiler (eg g77, but see src/gap4/legacy_f2c.c and the
	            src/gap4/Makefile if this is an issue)
* GNU make
* TexInfo (for documentation only)

Building the package consists of three main components: source,
documentation and course notes.


Source code
===========

The program source is all held within the src directory. It now uses
the GNU autoconf system, but we recommend using it in the following
manner.

    cd src
    mkdir build.myhost
    cd build.myhost
    ../configure [options]
    make

You may need to specify options to the configure script in order to
find certain third-party packages:

  --with-samtools=DIR
	Specifies either a prefix directory for the installed samtools
	files, or alternatively the root of an unpacked and built
	samtools source tree.

  --with-io_lib=DIR
	Specifies the prefix for an io_lib install.

  --with-zlib=DIR
	Specifies the prefix for a zlib install.

  --with-libcurl=DIR
	Specifies the prefix for a curl install.

  --with-tcl=DIR
	Specifies the directory containing a tclConfig.sh file.

  --with-tk=DIR
	Specifies the directory containing a tkConfig.sh file.

  --with-tclinclude=DIR
	If not found in the place specified in tclConfig.sh, this
	specifies the root directory of a tcl source tree (so it
	should have generic, unix, etc subdirectories).

  --with-tkinclude=DIR
	If not found in the place specified in tkConfig.sh, this
	specifies the root directory of a tcl source tree (so it
	should have generic, unix, etc subdirectories).
	
You may also want to use the --prefix=DIR option to control the
install prefix (defaults to /usr/local/staden).

Note that on some systems it is not sufficient to simply use the
--with-x=y syntax, but you also need to setup LD_LIBRARY_PATH to
include the location of any run-time libraries prior to linking
against them. This shouldn't be an issue for libraries installed in
the default system locations.

Examples for standard systems follow.

Debian etch
-----------

mkdir src/build.etch
cd src/build.etch
../configure \
    --with-samtools=$HOME/ftp/samtools-0.1.5c \
    --with-tcl=/usr/lib/tcl8.4 --with-tk=/usr/lib/tk8.4 \
    --with-tkinclude=/usr/include/tcl8.4/tk-private/generic



Documentation / Course notes
============================

These are not yet using autoconf, but are less system specific than
source code compilations.  Both make heavy use of TeX and TeXInfo, but
for general users just downloading the prebuilt documentation is
sufficient as it is platform agnostic.

Should you wish to build the documentation and/or course material
yourself from scratch cd to the appropriate directory and type
make. Eg:

    (cd doc; make)
    (cd course; make)


=============================================================================


		     Windows build 1st July 2004
		     ===========================

TODO: Update this. Windows build can be made to look largely like the
unix build if you use mingw/msys, but you'll most likely have to build
the prerequisites yourself.



* Install mingw (3.1.0), msys (1.0.10).
Put these somewhere without a space in their path. Ie not "/program
files/mingw". This causes problems for some tools (eg windres). It's
not critical however (see below).

* Install zlib (1.2.1)
Unpack this in $STADENROOT/src when doing the compile and leave it
there. It is needed by other parts of the staden package.

* Install libpng (1.2.5)
Again, unpack this in $STADENROOT/src. You'll need to edit the
scripts/makefile.cygwin to specify where the zlib include and library
is. png also expects zlib to be -lz where as for windows it is
-lzlib1. Edit accordingly.
We're only interested in shared libraries so "make -f
scripts/makefile.cygwin all-shared" will suffice (after editing).
Once built, copy the cygpng12.dll to
STADENROOT/lib/windows-binaries/png12.dll.

* Install tcl (8.4.6) and tk (8.4.6).
Other versions probably work, but these are the ones I tested it with.

When compiling tcl/tk put them in the STADENROOT/src directory and
rename to tcl8.4/ and tk8.4/. Use "cd win; ./configure
--enable-shared; make". I had problems with windres failing as it
doesn't like to run from a directory containing a space (see above),
but copying it elsewhere cures that.

* Install the prebuilt binaries of itcl/itk (itcl-3.3b1_win32.zip from
sourceforge). Copy the lib directory contents (itcl3.3 and itk3.3) to
$STADENROOT/lib.

* Install iwidgets-4.0.1 (from the same sourceforge page as incrtcl
above) in lib.

* Install WiX somewhere (needs light & candle executables)

* Edit STADENROOT/mk/global.mk to update the versions of the various
third party libraries so that the compilation environment knows where
the proper include search path should be. (Ie for zlib, linpng, tcl, tk).

* Make STADENROOT/src/lib/windows-binaries.

* Put in STADENROOT/src/lib/windows-binaries your libzlib1.dll,
libtcl8.4.6.dll and libtk8.4.6.dll

* Make :)

* cd STADENROOT/src/windows/wix and make the .msi file
  (Optionally install perl too if you want to regenerate the .wxs files.)


